openapi: 3.0.0
info:
  title: Spring Security API
  version: 1.0.0
  description: This is a Spring Security-based API for authentication, authorization, and user management.

paths:
  /api/v1/admin/post:
    post:
      tags:
        - Admin
      summary: "Create a new resource (admin)"
      operationId: postAdmin
      security:
        - admin: [admin:create]
      responses:
        '200':
          description: Successfully created resource
          content:
            application/json:
              schema:
                type: string
                example: "POST:: admin controller"

  /api/v1/admin/get:
    get:
      tags:
        - Admin
      summary: "Get resource (admin)"
      operationId: getAdmin
      security:
        - admin: [admin:read]
      responses:
        '200':
          description: Successfully fetched resource
          content:
            application/json:
              schema:
                type: string
                example: "GET:: admin controller"

  /api/v1/admin/put:
    put:
      tags:
        - Admin
      summary: "Update resource (admin)"
      operationId: putAdmin
      security:
        - admin: [admin:update]
      responses:
        '200':
          description: Successfully updated resource
          content:
            application/json:
              schema:
                type: string
                example: "PUT:: admin controller"

  /api/v1/admin/delete:
    delete:
      tags:
        - Admin
      summary: "Delete resource (admin)"
      operationId: deleteAdmin
      security:
        - admin: [admin:delete]
      responses:
        '200':
          description: Successfully deleted resource
          content:
            application/json:
              schema:
                type: string
                example: "DELETE:: admin controller"

  /api/v1/auth/register:
    post:
      tags:
        - Authentication
      summary: "Register a new user"
      operationId: registerUser
      responses:
        '200':
          description: Successfully registered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'

  /api/v1/auth/authenticate:
    post:
      tags:
        - Authentication
      summary: "Authenticate an existing user"
      operationId: authenticateUser
      responses:
        '200':
          description: Successfully authenticated user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'

  /api/v1/auth/refresh-token:
    post:
      tags:
        - Authentication
      summary: "Refresh the user's token"
      operationId: refreshToken
      responses:
        '200':
          description: Successfully refreshed the token
        '400':
          description: Bad request

  /api/v1/user-controller/{email}:
    get:
      tags:
        - User
      summary: "Get user details by email"
      operationId: getUserDetails
      parameters:
        - name: email
          in: path
          required: true
          description: The user's email address
          schema:
            type: string
      security:
        - user: [user:read]
      responses:
        '200':
          description: Successfully fetched user details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'

components:
  schemas:
    AuthenticationResponse:
      type: object
      properties:
        token:
          type: string
          description: The authentication token
    UserDetails:
      type: object
      properties:
        email:
          type: string
          description: The user's email
        fullName:
          type: string
          description: The user's full name
        roles:
          type: array
          items:
            type: string
          description: The roles assigned to the user
